#!/usr/bin/php

<?php

define('ROOT', dirname(dirname(__FILE__)));
define('DS', "/");

require(ROOT."/script/script_includes.php");

$files = getDirectoryList(ROOT.'/application/structures');

foreach ($files as $file) {
	if (strpos($file,'.php') && $file != "users.php") {
		$models[] = ROOT.'/application/structures/'.$file;
	}
}

$files = getDirectoryList(ROOT.'/library/structures');

foreach ($files as $file) {
	if (strpos($file,'.php')) {
		$models[] = ROOT.'/library/structures/'.$file;
	}
}


if (empty($models)) {
	echo "No structures found\n";
	return;
}
else {

	$models_added = array();

	foreach ($models as $model) {
		if (file_exists($model)) {
			include($model);
		}
		else {
			fwrite(STDOUT, "Model file could not be found\n");
			return;
		}

		$filename_split = explode('/', $model);
		$model_name = str_replace(".php", "", $filename_split[sizeof($filename_split)-1]);
		$table_name = Inflection::pluralize($model_name);

		$db = db::getInstance();

		$table_query = "CREATE TABLE IF NOT EXISTS $table_name(id INT NOT NULL AUTO_INCREMENT, PRIMARY KEY(id)); ALTER TABLE $table_name CONVERT TO CHARACTER SET utf8 COLLATE utf8_unicode_ci;";

		try {
			$db->exec($table_query);
		} catch (Exception $e) {
			echo "Could not create $table_name\n";
			echoc($e->getMessage()."\n", RED);
			return;
		}

	}

	foreach ($models as $model) {
		$filename_split = explode('/', $model);
		$model_name = str_replace(".php", "", $filename_split[sizeof($filename_split)-1]);
		try {
			add_model_to_database($model_name);
		} catch (Exception $e) {
			echo "Could add model $table_name to database\n";
			echoc($e->getMessage()."\n", RED);
			return;
		}
	}

}

// add sessions table

	$db = db::getInstance();

	$table_query = 		"CREATE TABLE IF NOT EXISTS `sessions` (
  `id` char(32) CHARACTER SET latin1 NOT NULL,
  `data` longtext CHARACTER SET latin1 NOT NULL,
  `last_accessed` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;";
	try {
		echo "Checking sessions table\n";

		$db->exec($table_query);

		}
		catch (Exception $e) {
		echoc($e->getMessage(), 'RED');
		echo "\n";
	}



?>
